<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <title>Billar - Bar OSO</title>
  <style>
    * { box-sizing: border-box; }
    body {
      margin: 0;
      font-family: Arial, sans-serif;
      background: #f4f4f4;
    }
    header {
      background: #222;
      color: white;
      display: flex;
      align-items: center;
      padding: 10px 15px;
      justify-content: space-between;
    }
    header img {
      height: 45px;
      cursor: pointer;
    }
    header h1 {
      margin: 0;
      flex: 1;
      text-align: center;
      font-size: 20px;
    }
    .resumen-dia {
      font-size: 12px;
      text-align: right;
      line-height: 1.4;
    }
    #usuarioActivo {
      font-size: 12px;
      margin-left: 10px;
      color: #ccc;
    }
    .panel {
      width: 270px;
      background: #2c2c2c;
      color: #fff;
      padding: 15px;
      height: calc(100vh - 60px);
      overflow-y: auto;
      float: left;
    }
    .panel h2 {
      margin-top: 0;
      font-size: 18px;
    }
    .panel button {
      width: 100%;
      margin: 6px 0;
      padding: 10px;
      font-size: 14px;
      border: none;
      border-radius: 6px;
      background: #4caf50;
      color: white;
      cursor: pointer;
      transition: background 0.3s;
    }
    .panel button:hover {
      background: #45a049;
    }
    .contenido {
      margin-left: 270px;
      padding: 15px;
      display: grid;
      grid-template-columns: repeat(5, 1fr);
      gap: 15px;
      overflow-x: auto;
    }
    .mesa {
      height: 240px;
      border-radius: 10px;
      padding: 10px;
      color: #fff;
      background-size: cover;
      background-position: center;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
      position: relative;
      background-color: #444;
      box-shadow: 0 3px 6px rgba(0,0,0,0.2);
    }
    .mesa.activa {
      background-color: #a00 !important;
    }
    .mesa.horizontal {
      grid-column: span 2;
    }
    .acciones {
      position: absolute;
      top: 10px;
      left: 10px;
      display: flex;
      flex-direction: column;
      gap: 5px;
    }
    .acciones button {
      background: #fff;
      border: none;
      border-radius: 6px;
      width: 32px;
      height: 32px;
      font-size: 16px;
      cursor: pointer;
      display: flex;
      align-items: center;
      justify-content: center;
      box-shadow: 0 2px 4px rgba(0,0,0,0.3);
      transition: transform 0.2s ease;
    }
    .acciones button:hover {
      transform: scale(1.1);
      background: #ffeb3b;
    }
    .nombre-mesa {
      background: rgba(0,0,0,0.6);
      border-radius: 5px;
      padding: 6px;
      font-weight: bold;
      text-align: center;
      cursor: pointer;
    }
    .nombre-mesa.activa {
      background-color: orange;
      color: #000;
    }
    .nombre-mesa.inactiva {
      background-color: green;
      color: #fff;
    }
    .cronometro {
      background: rgba(0,0,0,0.6);
      font-size: 14px;
      padding: 5px;
      border-radius: 6px;
      text-align: center;
    }
    .modal {
      display: none;
      position: fixed;
      z-index: 10000;
      left: 0;
      top: 0;
      width: 100%;
      height: 100%;
      overflow: auto;
      background: rgba(0,0,0,0.5);
      justify-content: center;
      align-items: center;
    }
    .modal-content {
      background-color: #fff;
      padding: 20px;
      border-radius: 10px;
      width: 90%;
      max-width: 400px;
    }
    .modal-content h3 {
      margin-top: 0;
    }
    .modal-content input, .modal-content button, .modal-content select, .modal-content textarea {
      width: 100%;
      margin: 8px 0;
      padding: 10px;
      font-size: 14px;
    }
    #ticketPreview .modal-content {
      max-width: 350px;
      font-family: 'Courier New', monospace;
    }
    #ticketVisual {
      background: #fff;
      border: 1px solid #ccc;
      padding: 15px;
      font-size: 16px;
      text-align: center;
    }
    #ticketVisual img {
      max-width: 80px;
      margin-bottom: 10px;
    }
    #ticketVisual hr {
      border: none;
      border-top: 1px dashed #999;
      margin: 10px 0;
    }
    #ticketVisual .ticket-bloque {
      border: 1px dashed #333;
      padding: 10px;
      margin: 10px 0;
      font-weight: bold;
    }

    /* üéØ Estilo para bot√≥n de editar hora */
    .acciones button.edit {
      background-color: #2196f3;
      color: white;
    }

    /* üóëÔ∏è √çcono para eliminar producto */
    .icono-papelera {
      float: right;
      cursor: pointer;
      color: #f44336;
      font-size: 16px;
    }
    .icono-papelera:hover {
      color: #ff0000;
    }
  </style>
</head>
<body>
  <header>
    <input type="file" id="logoInput" style="display:none" accept="image/*" onchange="cargarLogo(event)">
    <img src="" id="logo" onclick="document.getElementById('logoInput').click()" alt="Logo">
    <h1 contenteditable="true">BILLAR - BAR OSO</h1>
    <div style="text-align:right;">
      <div id="usuarioActivo">üë§ Invitado</div>
      <div class="resumen-dia">
        üü¢ Alquileres: <span id="resAlquileres">S/ 0.00</span><br>
        üü† Ventas: <span id="resVentas">S/ 0.00</span><br>
        üßæ Total D√≠a: <span id="resTotal">S/ 0.00</span>
      </div>
    </div>
  </header>

  <div class="panel">
    <h2>Panel de Control</h2>
    <button onclick="mostrarModal('modalAgregarMesa')">‚ûï Agregar Mesa</button>
    <button onclick="mostrarModal('modalAgregarProducto')">üì¶ Agregar Producto</button>
    <button onclick="abrirVentaModal()">üí∞ Venta Directa</button>
    <button onclick="mostrarModal('modalIngresoGasto')">üí≥ Ingresos / Gastos</button>
    <button onclick="mostrarNumerosSorteo()">üéüÔ∏è N√∫meros Sorteo</button>
    <button id="btnCrearUsuario" style="display:none" onclick="mostrarModal('modalCrearUsuario')">üë§ Crear Usuario</button>
    <button id="btnCerrarSesion" style="display:none" onclick="cerrarSesion()">üîí Cerrar Sesi√≥n</button>
    <button onclick="mostrarReporteMensual()">üìä Reporte Mensual</button>
    <button onclick="mostrarReporteDiario()">üìÜ Reporte Diario</button>
    <hr>
    <div id="listaProductos"></div>
  </div>

  <div class="contenido" id="mesas"></div>

  <!-- ‚úÖ Modal Agregar Mesa -->
  <div class="modal" id="modalAgregarMesa">
    <div class="modal-content">
      <h3>Agregar Mesa</h3>
      <input type="text" id="nombreMesaInput" placeholder="Nombre de la mesa">
      <input type="number" id="precioMesaInput" placeholder="Precio por hora">
      <button onclick="confirmarAgregarMesa()">Agregar</button>
      <button onclick="cerrarModal('modalAgregarMesa')">Cancelar</button>
    </div>
  </div>

  <!-- ‚úÖ Modal Agregar Producto -->
  <div class="modal" id="modalAgregarProducto">
    <div class="modal-content">
      <h3>Agregar Producto</h3>
      <input type="text" id="productoNombre" placeholder="Nombre del producto">
      <input type="number" id="productoPrecio" placeholder="Precio">
      <input type="number" id="productoStock" placeholder="Stock">
      <button onclick="confirmarAgregarProducto()">Guardar</button>
      <button onclick="cerrarModal('modalAgregarProducto')">Cancelar</button>
    </div>
  </div>

  <!-- ‚úÖ Modal Ingreso/Gasto -->
  <div class="modal" id="modalIngresoGasto">
    <div class="modal-content">
      <h3>Ingresos y Gastos Manuales</h3>
      <select id="tipoIngresoGasto">
        <option value="ingresos">Ingreso</option>
        <option value="egresos">Gasto</option>
      </select>
      <input type="number" id="montoIngresoGasto" placeholder="Monto">
      <textarea id="detalleIngresoGasto" placeholder="Detalle (opcional)"></textarea>
      <button onclick="registrarIngresoGastoManual()">Registrar</button>
      <button onclick="cerrarModal('modalIngresoGasto')">Cancelar</button>
    </div>
  </div>

  <!-- ‚úÖ Modal Sorteo -->
  <div class="modal" id="modalSorteo">
    <div class="modal-content">
      <h3>N√∫meros Sorteo</h3>
      <div id="listaNumerosSorteo" style="max-height:300px; overflow:auto; font-size:14px;"></div>
      <button onclick="cerrarModal('modalSorteo')">Cerrar</button>
    </div>
  </div>

  <!-- ‚úÖ Modal Crear Usuario -->
  <div class="modal" id="modalCrearUsuario">
    <div class="modal-content">
      <h3>Crear Usuario</h3>
      <input type="text" id="nuevoUsuario" placeholder="Usuario">
      <input type="password" id="nuevaClave" placeholder="Contrase√±a">
      <label><input type="checkbox" id="permisoReporte"> Puede ver Reporte</label>
      <button onclick="crearNuevoUsuario()">Crear</button>
      <button onclick="cerrarModal('modalCrearUsuario')">Cancelar</button>
    </div>
  </div>

  <!-- ‚úÖ Modal Login -->
  <div class="modal" id="modalLogin">
    <div class="modal-content">
      <h3>Iniciar Sesi√≥n</h3>
      <input type="text" id="loginUser" placeholder="Usuario">
      <input type="password" id="loginPass" placeholder="Contrase√±a">
      <button onclick="iniciarSesion()">Entrar</button>
    </div>
  </div>

  <!-- ‚úÖ Modal Vista Previa Ticket -->
  <div class="modal" id="ticketPreview">
    <div class="modal-content">
      <h3>Vista Previa Ticket</h3>
      <div id="ticketVisual"></div>
      <button onclick="imprimirVista()">üñ®Ô∏è Imprimir</button>
    </div>
  </div>

  <!-- ‚úÖ NUEVO: Modal Edici√≥n Manual de Hora -->
  <div class="modal" id="modalEditarHora">
    <div class="modal-content">
      <h3>Editar Horario Manualmente</h3>
      <input type="time" id="horaInicioManual" required>
      <input type="time" id="horaFinManual" required>
      <button onclick="aplicarEdicionManual()">Guardar Cambios</button>
      <button onclick="cerrarModal('modalEditarHora')">Cancelar</button>
    </div>
  </div>
<script>
let mesas = [], productos = [], resumen = { alquileres: 0, ventas: 0 }, usuarios = [], user = null;
let historial = JSON.parse(localStorage.getItem("historial_dia")) || [];
let numerosSorteo = JSON.parse(localStorage.getItem("numeros_sorteo")) || [];
let contadorSorteo = numerosSorteo.length;
let mesaEditando = null;

window.onload = () => {
  const data = JSON.parse(localStorage.getItem("billar_oso")) || {};
  mesas = data.mesas || [];
  productos = data.productos || [];
  resumen = data.resumen || { alquileres: 0, ventas: 0 };
  usuarios = data.usuarios || [{ user: "admin", pass: "123", permisos: { reporte: true } }];
  renderLogo();
  renderProductos();
  renderMesas();
  mostrarModal("modalLogin");
  setInterval(actualizarTiempos, 1000);
};

function guardar() {
  localStorage.setItem("billar_oso", JSON.stringify({ mesas, productos, resumen, usuarios }));
  localStorage.setItem("historial_dia", JSON.stringify(historial));
  localStorage.setItem("numeros_sorteo", JSON.stringify(numerosSorteo));
}
function cargarLogo(e) {
  const reader = new FileReader();
  reader.onload = () => {
    localStorage.setItem("logo_billar", reader.result);
    renderLogo();
  };
  reader.readAsDataURL(e.target.files[0]);
}
function renderLogo() {
  const logo = localStorage.getItem("logo_billar");
  if (logo) document.getElementById("logo").src = logo;
}
function mostrarModal(id) {
  document.getElementById(id).style.display = "flex";
}
function cerrarModal(id) {
  document.getElementById(id).style.display = "none";
}
function iniciarSesion() {
  const u = document.getElementById("loginUser").value.trim().toLowerCase();
  const p = document.getElementById("loginPass").value.trim();
  const encontrado = usuarios.find(usr => usr.user.toLowerCase() === u && usr.pass === p);
  if (encontrado) {
    user = encontrado;
    document.getElementById("usuarioActivo").textContent = `üë§ ${user.user}`;
    cerrarModal("modalLogin");
    document.getElementById("btnCerrarSesion").style.display = "block";
    if (user.user.toLowerCase() === "admin") document.getElementById("btnCrearUsuario").style.display = "block";
  } else {
    alert("Credenciales incorrectas");
  }
}
function cerrarSesion() {
  location.reload();
}
function crearNuevoUsuario() {
  const u = document.getElementById("nuevoUsuario").value.trim().toLowerCase();
  const p = document.getElementById("nuevaClave").value.trim();
  const permiso = document.getElementById("permisoReporte").checked;
  if (u && p) {
    usuarios.push({ user: u, pass: p, permisos: { reporte: permiso } });
    guardar();
    cerrarModal("modalCrearUsuario");
    alert("Usuario creado");
  }
}
function confirmarAgregarMesa() {
  const nombre = document.getElementById("nombreMesaInput").value || "Mesa";
  const precio = parseFloat(document.getElementById("precioMesaInput").value) || 0;
  mesas.push({ nombre, fondo: "", tiempo: "00:00:00", importe: "0.00", activa: false, precio });
  guardar();
  renderMesas();
  cerrarModal("modalAgregarMesa");
}
function confirmarAgregarProducto() {
  const nombre = document.getElementById("productoNombre").value;
  const precio = parseFloat(document.getElementById("productoPrecio").value);
  const stock = parseInt(document.getElementById("productoStock").value);
  if (!nombre || isNaN(precio) || isNaN(stock)) return;
  productos.push({ nombre, precio: precio.toFixed(2), stock });
  guardar();
  renderProductos();
  cerrarModal("modalAgregarProducto");
}
function renderProductos() {
  const div = document.getElementById("listaProductos");
  div.innerHTML = productos.map((p, i) => `
    <div style="font-size:13px; margin:4px 0; background:#444; padding:5px; border-radius:4px; display:flex; justify-content:space-between; align-items:center;">
      ${p.nombre} - S/ ${p.precio} (Stock: ${p.stock})
      <button onclick="eliminarProducto(${i})" style="background:none;border:none;color:red;font-size:16px;cursor:pointer;">üóëÔ∏è</button>
    </div>`).join("");
}
function eliminarProducto(i) {
  if (confirm("¬øEliminar este producto?")) {
    productos.splice(i, 1);
    guardar();
    renderProductos();
  }
}
function renderMesas() {
  const cont = document.getElementById("mesas");
  cont.innerHTML = mesas.map((m, i) => {
    const horizontal = m.nombre.toLowerCase().includes("poker") ? 'horizontal' : '';
    return `
      <div class="mesa ${m.activa ? 'activa' : ''} ${horizontal}" style="background-image:url('${m.fondo || ""}')">
        <div class="acciones">
          ${m.activa
            ? `<button onclick="finalizarMesa(${i})">‚èπÔ∏è</button>
               <button onclick="abrirEditorHora(${i})">üïí</button>`
            : `<button onclick="iniciarMesa(${i})">‚ñ∂Ô∏è</button>
               <button onclick="cambiarFondo(${i})">üñºÔ∏è</button>
               <button onclick="eliminarMesa(${i})">üóëÔ∏è</button>`}
        </div>
        <div class="cronometro">‚è±Ô∏è ${m.tiempo}<br>üíµ S/ ${m.importe}</div>
        <div class="nombre-mesa ${m.activa ? 'activa' : 'inactiva'}" onclick="editarNombreMesa(${i})">${m.nombre}</div>
      </div>`;
  }).join("");
  actualizarResumen();
}
function editarNombreMesa(i) {
  const nuevo = prompt("Nuevo nombre:", mesas[i].nombre);
  if (nuevo) {
    mesas[i].nombre = nuevo;
    guardar();
    renderMesas();
  }
}
function iniciarMesa(i) {
  mesas[i].inicio = Date.now();
  mesas[i].activa = true;
  guardar();
  renderMesas();
}
function finalizarMesa(i) {
  const fin = Date.now();
  const inicio = mesas[i].inicio;
  const duracion = Math.abs(Math.floor((fin - inicio) / 1000));
  const precio = mesas[i].precio || 0;
  const costo = precio === 0 ? "0.00" : (duracion / 3600 * precio).toFixed(2);
  mesas[i].importe = costo;
  mesas[i].tiempo = new Date(duracion * 1000).toISOString().substr(11, 8);
  mesas[i].activa = false;
  resumen.alquileres += parseFloat(costo);
  registrarHistorial("ingresos", parseFloat(costo));

  if (duracion >= 7200) {
    for (let j = 0; j < 4; j++) {
      contadorSorteo++;
      numerosSorteo.push({
        numero: contadorSorteo,
        mesa: mesas[i].nombre,
        tiempo: new Date(duracion * 1000).toISOString().substr(11, 8)
      });
    }
  }

  guardar();
  renderMesas();
  mostrarTicketMesa(mesas[i]);
  setTimeout(() => {
    mesas[i].tiempo = "00:00:00";
    mesas[i].importe = "0.00";
    guardar();
    renderMesas();
  }, 1000);
}
function abrirEditorHora(i) {
  mesaEditando = i;
  const now = new Date();
  document.getElementById("horaInicioManual").value = now.toISOString().substr(11, 5);
  document.getElementById("horaFinManual").value = now.toISOString().substr(11, 5);
  mostrarModal("modalEditarHora");
}
function aplicarEdicionManual() {
  const hInicio = document.getElementById("horaInicioManual").value;
  const hFin = document.getElementById("horaFinManual").value;
  const hoy = new Date().toISOString().split("T")[0];
  const tInicio = new Date(`${hoy}T${hInicio}:00`);
  const tFin = new Date(`${hoy}T${hFin}:00`);
  const duracion = Math.abs((tFin - tInicio) / 1000);
  const precio = mesas[mesaEditando].precio || 0;
  const costo = precio === 0 ? "0.00" : (duracion / 3600 * precio).toFixed(2);
  mesas[mesaEditando].inicio = tInicio.getTime();
  mesas[mesaEditando].importe = costo;
  mesas[mesaEditando].tiempo = new Date(duracion * 1000).toISOString().substr(11, 8);
  mesas[mesaEditando].activa = false;
  resumen.alquileres += parseFloat(costo);
  registrarHistorial("ingresos", parseFloat(costo));
  if (duracion >= 7200) {
    for (let j = 0; j < 4; j++) {
      contadorSorteo++;
      numerosSorteo.push({
        numero: contadorSorteo,
        mesa: mesas[mesaEditando].nombre,
        tiempo: new Date(duracion * 1000).toISOString().substr(11, 8)
      });
    }
  }
  guardar();
  renderMesas();
  mostrarTicketMesa(mesas[mesaEditando]);
  cerrarModal("modalEditarHora");
}
function cambiarFondo(i) {
  const input = document.createElement('input');
  input.type = 'file';
  input.accept = 'image/*';
  input.onchange = e => {
    const reader = new FileReader();
    reader.onload = () => {
      mesas[i].fondo = reader.result;
      guardar();
      renderMesas();
    };
    reader.readAsDataURL(e.target.files[0]);
  };
  input.click();
}
function eliminarMesa(i) {
  if (confirm("¬øEliminar esta mesa?")) {
    mesas.splice(i, 1);
    guardar();
    renderMesas();
  }
}
function actualizarTiempos() {
  mesas.forEach((m, i) => {
    if (m.activa && m.inicio) {
      const duracion = Math.floor((Date.now() - m.inicio) / 1000);
      m.tiempo = new Date(duracion * 1000).toISOString().substr(11, 8);
      const precio = m.precio || 0;
      m.importe = precio === 0 ? "0.00" : (duracion / 3600 * precio).toFixed(2);
    }
  });
  renderMesas();
}
function mostrarTicketMesa(m) {
  const logo = localStorage.getItem("logo_billar");
  const cont = document.getElementById("ticketVisual");
  cont.innerHTML = `
    ${logo ? `<img src="${logo}" alt="logo" />` : ""}
    <strong>BILLAR - BAR OSO</strong><br><hr>
    <div class="ticket-bloque">
      ü™ë Mesa: ${m.nombre}<br>
      ‚è±Ô∏è Tiempo: ${m.tiempo}<br>
      üí∞ Precio/hora: S/ ${m.precio}<br>
      üìå Total: S/ ${m.importe}<br>
    </div>
    <hr>
    <small>${new Date().toLocaleString()}</small>`;
  mostrarModal("ticketPreview");
}
function imprimirVista() {
  const contenido = document.getElementById("ticketVisual").innerHTML;
  const w = window.open('', '', 'width=400,height=600');
  w.document.write(`<div style="font-family:monospace;font-size:16px;text-align:center">${contenido}</div>`);
  w.document.close();
  w.focus();
  w.print();
  w.close();
  cerrarModal("ticketPreview");
}
function abrirVentaModal() {
  const opciones = productos.map((p, i) => `<option value="${i}">${p.nombre} - S/ ${p.precio}</option>`).join("");
  const html = `
    <div class="modal" id="modalVenta"><div class="modal-content">
      <h3>Venta Directa</h3>
      <select id="ventaProducto">${opciones}</select>
      <input type="number" id="ventaCantidad" value="1" min="1">
      <button onclick="confirmarVenta()">Vender</button>
      <button onclick="cerrarModal('modalVenta')">Cancelar</button>
    </div></div>`;
  document.body.insertAdjacentHTML("beforeend", html);
  mostrarModal("modalVenta");
}
function confirmarVenta() {
  const i = parseInt(document.getElementById("ventaProducto").value);
  const cant = parseInt(document.getElementById("ventaCantidad").value);
  const prod = productos[i];
  if (cant > prod.stock) return alert("Stock insuficiente");
  const total = (cant * parseFloat(prod.precio)).toFixed(2);
  resumen.ventas += parseFloat(total);
  registrarHistorial("ingresos", parseFloat(total));
  prod.stock -= cant;
  guardar();
  renderProductos();
  document.querySelector("#modalVenta").remove();
  const cont = document.getElementById("ticketVisual");
  cont.innerHTML = `<strong>Venta Directa</strong><br><hr>${prod.nombre} x${cant} = S/ ${total}<br><hr><small>${new Date().toLocaleString()}</small>`;
  mostrarModal("ticketPreview");
}
function actualizarResumen() {
  document.getElementById("resAlquileres").textContent = `S/ ${resumen.alquileres.toFixed(2)}`;
  document.getElementById("resVentas").textContent = `S/ ${resumen.ventas.toFixed(2)}`;
  document.getElementById("resTotal").textContent = `S/ ${(resumen.alquileres + resumen.ventas).toFixed(2)}`;
}
function registrarHistorial(tipo, monto) {
  const hoy = new Date().toISOString().split("T")[0];
  const dia = historial.find(d => d.fecha === hoy);
  if (dia) {
    dia[tipo] = (dia[tipo] || 0) + monto;
  } else {
    const nuevo = { fecha: hoy, ingresos: 0, egresos: 0 };
    nuevo[tipo] = monto;
    historial.push(nuevo);
  }
  guardar();
}
function registrarIngresoGastoManual() {
  const tipo = document.getElementById("tipoIngresoGasto").value;
  const monto = parseFloat(document.getElementById("montoIngresoGasto").value);
  if (isNaN(monto)) return alert("Monto inv√°lido");
  registrarHistorial(tipo, monto);
  cerrarModal("modalIngresoGasto");
  alert("Registro guardado");
}
function mostrarReporteMensual() {
  const modal = document.createElement("div");
  modal.className = "modal";
  modal.style.display = "flex";
  modal.innerHTML = `
    <div class="modal-content" style="max-width:800px">
      <h3>üìà Reporte General Mensual</h3>
      <canvas id="graficoMes" height="220"></canvas>
      <button onclick="this.closest('.modal').remove()">Cerrar</button>
    </div>`;
  document.body.appendChild(modal);
  const ctx = modal.querySelector("#graficoMes").getContext("2d");
  const labels = Array.from({length: 31}, (_, i) => `${i+1}`);
  const datosIngresos = Array(31).fill(0), datosEgresos = Array(31).fill(0);
  historial.forEach(d => {
    const dia = parseInt(d.fecha.split("-")[2], 10) - 1;
    datosIngresos[dia] = d.ingresos || 0;
    datosEgresos[dia] = d.egresos || 0;
  });
  new Chart(ctx, {
    type: "bar",
    data: {
      labels,
      datasets: [
        { label: "Ingresos", backgroundColor: "#4caf50", data: datosIngresos },
        { label: "Egresos", backgroundColor: "#f44336", data: datosEgresos }
      ]
    },
    options: {
      responsive: true,
      scales: { y: { beginAtZero: true } }
    }
  });
}
function mostrarReporteDiario() {
  const hoy = new Date().toISOString().split("T")[0];
  const dia = historial.find(d => d.fecha === hoy);
  if (!dia) return alert("No hay registros para hoy");
  const modal = document.createElement("div");
  modal.className = "modal";
  modal.style.display = "flex";
  modal.innerHTML = `
    <div class="modal-content" style="max-width:300px">
      <h3>üìÜ Reporte Diario</h3>
      Ingresos: S/ ${dia.ingresos?.toFixed(2) || "0.00"}<br>
      Gastos: S/ ${dia.egresos?.toFixed(2) || "0.00"}<br>
      Total: S/ ${(dia.ingresos - dia.egresos).toFixed(2)}
      <button onclick="this.closest('.modal').remove()">Cerrar</button>
    </div>`;
  document.body.appendChild(modal);
}
function mostrarNumerosSorteo() {
  const div = document.getElementById("listaNumerosSorteo");
  div.innerHTML = numerosSorteo.map(n => `#${n.numero} - ${n.mesa} (${n.tiempo})`).join("<br>");
  mostrarModal("modalSorteo");
}function imprimirVista() {
  const contenido = document.getElementById("ticketVisual").innerHTML;
  const w = window.open('', '', 'width=300,height=600'); // Tama√±o aproximado 70mm x 90mm

  w.document.write(`
    <html>
    <head>
      <style>
        @media print {
          @page {
            size: 70mm 90mm;
            margin: 0mm;
          }

          body {
            margin: 0;
            padding: 0;
            width: 70mm;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            color: #000;
            background: white;
          }

          .ticket {
            width: 68mm;
            margin: 1mm auto;
            padding: 4mm;
            box-sizing: border-box;
          }

          .ticket img {
            max-width: 60px;
            display: block;
            margin: 0 auto 8px;
          }

          .ticket strong {
            display: block;
            text-align: center;
            font-size: 16px;
            margin-bottom: 5px;
          }

          .ticket hr {
            border: none;
            border-top: 1px dashed #000;
            margin: 5px 0;
          }

          .ticket .ticket-bloque {
            border: 1px dashed #000;
            padding: 8px;
            margin: 6px 0;
            font-weight: bold;
            font-size: 14px;
          }

          .ticket small {
            display: block;
            text-align: center;
            margin-top: 10px;
            font-size: 12px;
          }
        }
      </style>
    </head>
    <body>
      <div class="ticket">
        ${contenido}
      </div>
    </body>
    </html>
  `);

  w.document.close();
  w.focus();
  w.print();
  w.close();
  cerrarModal("ticketPreview");
}

</script>
